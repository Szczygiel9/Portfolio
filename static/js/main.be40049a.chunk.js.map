{"version":3,"sources":["components/Item.js","components/ItemList.js","components/Header.js","components/Sidebar.js","components/ExperienceSection.js","data/ExperienceItems.js","components/SkillsSection.js","components/Description.js","components/MainContent.js","components/About.js","data/SampleProjects.js","App.js","serviceWorker.js","index.js"],"names":["Item","title","content","className","ItemList","projects","map","project","Header","exact","activeClassName","to","Sidebar","ExperienceSection","experienceItem","position","dateFrom","dateTo","descriptionPoints","point","ExperienceItems","file","SkillsSection","item","Description","MainContent","About","sampleProject3","sampleProject4","sampleProject5","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.be40049a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Item = ({title, content}) => {\r\n    return (\r\n        <div className='item'>\r\n            <h1>{title}</h1>\r\n            <p>{content}</p>\r\n        </div>\r\n    );\r\n};\r\nexport default Item;\r\n","import React from 'react';\r\nimport Item from \"./Item\";\r\n\r\nconst ItemList = ({projects}) => {\r\n    return (\r\n        <div className='item-list'>\r\n            {\r\n                projects.map(\r\n                    function (project) {\r\n                        return (\r\n                            <Item title={project.title} content={project.content}/>\r\n                        )\r\n                    }\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n};\r\nexport default ItemList;\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className='nav'>\r\n            <NavLink exact activeClassName='ActiveLink' to=\"/\">O mnie</NavLink>\r\n            <NavLink activeClassName='ActiveLink' to=\"/projects\">Repozytoria warte wspomnienia</NavLink>\r\n        </div>\r\n    );\r\n};\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <div className='sidebar'>\r\n            <h1>Sth</h1>\r\n            <ul>\r\n                <li>one</li>\r\n                <li>two</li>\r\n                <li>three</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\nexport default Sidebar;\r\n","import React from 'react';\r\n\r\nconst ExperienceSection = ({title, content}) => {\r\n    return (\r\n        <div className='section'>\r\n            <h1 className='section-title'>{title}</h1>\r\n            {content.map((experienceItem) => {\r\n                return (\r\n                    <div>\r\n                        <h2 className='experience-position'>{experienceItem.position}</h2>\r\n                        <h3 className='experience-date'>{experienceItem.dateFrom} - {experienceItem.dateTo}</h3>\r\n                        <ul className='experience-list'>\r\n                            {experienceItem.descriptionPoints.map((point) => {\r\n                                return <li>{point}</li>\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\nexport default ExperienceSection;\r\n","const assecoExp = {\r\n    dateFrom: \"Maj 2018\",\r\n    dateTo: \"Sierpień 2019\",\r\n    position: \"Praktykant\",\r\n    descriptionPoints: [\r\n        \"Tworzenie modelu dedykowanego do komunikacji typu REST\",\r\n        \"Tworzenie zaawansowanych serwisów typu REST\",\r\n        \"Hibernate - użycie biblioteki na potrzeby pobierania odpowiednich danych dziedzinowych\",\r\n        \"Spring - użycie biblioteki na potrzeby tworzenia serwiów dziedzinowych oraz typu REST\",\r\n        \"Swagger - konfiguracja i użycie biblioteki dokumentującej serwisy typu REST\",\r\n        \"Tworzenie testów jednostkowych wraz z weryfikacją przetwarzania równoległego\"\r\n    ],\r\n    file: \"/asseco.jpg\"\r\n};\r\n\r\nconst sollersExp = {\r\n    dateFrom: \"Listopad 2019\",\r\n    dateTo: \"Obecnie\",\r\n    position: \"Developer\",\r\n    descriptionPoints: [\"Sample desc...\", \"Sample desc...\", \"Sample desc...\"]\r\n};\r\n\r\nconst ExperienceItems = [assecoExp, sollersExp];\r\n\r\nexport default ExperienceItems;\r\n","import React from 'react';\r\n\r\nconst SkillsSection = ({title, content}) => {\r\n    return (\r\n        <div className='section'>\r\n            <h1 className='section-title'>{title}</h1>\r\n            <div>\r\n                <ul>\r\n                    {\r\n                        content.map((item) => {\r\n                                return <li>{item}</li>\r\n                            }\r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default SkillsSection;\r\n","import React from 'react';\r\n\r\nconst Description = () => {\r\n    return (\r\n        <div className='section'>\r\n            <h1 className='section-title'>Informacje ogólne</h1>\r\n            <p>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. In interdum vel sem non rutrum. Quisque bibendum tortor tempus porta scelerisque. Phasellus elementum nunc eget auctor lobortis. Donec ipsum nisl, convallis tristique rutrum ut, auctor quis risus. Vestibulum auctor dignissim erat at suscipit. Donec a suscipit lorem. Nullam eu justo sit amet ligula suscipit semper eu ut sapien.\r\n                Nulla dignissim vestibulum rhoncus. Aliquam sagittis ac ligula vitae mollis. Duis porta, justo ut congue maximus, orci enim vestibulum dolor, eu ultricies orci urna eu turpis. Mauris consectetur hendrerit nisi, at molestie quam pulvinar a. Aenean lobortis lorem mattis libero egestas, ut blandit est faucibus. Sed et tortor nec nibh imperdiet aliquam id vitae ante. Suspendisse vel nisi ornare, auctor ex ut, bibendum nisl. Pellentesque id elit vehicula, laoreet eros vitae, tempus metus. Duis eget dapibus nisi, et lobortis augue. Nunc auctor, nibh accumsan tincidunt condimentum, ipsum turpis hendrerit tellus, eu ultricies eros ligula non tellus. Etiam ac sapien consectetur, venenatis est efficitur, vulputate mauris.\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\nexport default Description;\r\n","import React from 'react';\r\nimport ExperienceSection from \"./ExperienceSection\";\r\nimport ExperienceItems from \"../data/ExperienceItems\";\r\nimport SkillsSection from \"./SkillsSection\";\r\nimport Description from \"./Description\";\r\n\r\nconst MainContent = () => {\r\n    return (\r\n        <div className='main-content'>\r\n            <Description/>\r\n            <ExperienceSection\r\n                title={\"Doświadczenie zawodowe\"}\r\n                content={ExperienceItems}/>\r\n            <SkillsSection\r\n                title={\"Umiejętności\"}\r\n                content={[\"Lorep ipsum\", \"Lorep ipsum\", \"Lorep ipsum\"]}/>\r\n        </div>\r\n    );\r\n};\r\nexport default MainContent\r\n","import React from 'react';\r\nimport Sidebar from \"./Sidebar\";\r\nimport MainContent from \"./MainContent\";\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className='about'>\r\n            <Sidebar/>\r\n            <MainContent/>\r\n        </div>\r\n    );\r\n};\r\nexport default About;\r\n","const sampleProject1 = {\r\n    title: \"Sample Title1\",\r\n    content: \"Sample content1\"\r\n};\r\n\r\nconst sampleProject2 = {\r\n    title: \"Sample Title2\",\r\n    content: \"Sample content2\"\r\n};\r\nconst sampleProject3 = {\r\n    title: \"Sample Title2\",\r\n    content: \"Sample content2\"\r\n};\r\nconst sampleProject4 = {\r\n    title: \"Sample Title2\",\r\n    content: \"Sample content2\"\r\n};\r\nconst sampleProject5 = {\r\n    title: \"Sample Title2\",\r\n    content: \"Sample content2\"\r\n};\r\n\r\nconst projects = [sampleProject1,\r\n    sampleProject2,\r\n    sampleProject3,\r\n    sampleProject4,\r\n    sampleProject5,\r\n    sampleProject3,\r\n    sampleProject4,\r\n    sampleProject5,\r\n    sampleProject5,\r\n    sampleProject3,\r\n    sampleProject4,\r\n    sampleProject5,\r\n    sampleProject4,\r\n    sampleProject5,\r\n    sampleProject3,\r\n    sampleProject4,\r\n    sampleProject5,\r\n    sampleProject5,\r\n    sampleProject3,\r\n    sampleProject4,\r\n    sampleProject3,\r\n    sampleProject4,\r\n    sampleProject5,\r\n    sampleProject3,\r\n    sampleProject4,\r\n    sampleProject5,\r\n    sampleProject5,\r\n    sampleProject3,\r\n    sampleProject4,\r\n    sampleProject5,\r\n    sampleProject4,\r\n    sampleProject5,\r\n    sampleProject3,\r\n    sampleProject4,\r\n    sampleProject5,\r\n    sampleProject5,\r\n    sampleProject3,\r\n    sampleProject4,\r\n    sampleProject5\r\n];\r\nexport default projects\r\n","import React from 'react';\nimport './App.css';\nimport ItemList from \"./components/ItemList\";\nimport Header from \"./components/Header\";\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport About from \"./components/About\";\nimport projects from \"./data/SampleProjects\";\n\nfunction App() {\n    return (\n        < Router>\n            <div className=\"App\">\n                <Header/>\n                <Route exact path=\"/\" component={About}/>\n                <Route path=\"/projects\" component={() => <ItemList projects={projects}/>}/>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}